name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Clone GDClip with submodules
      uses: actions/checkout@v3
      with:
        repository: hansemro/GDClip
        ref: build_test
        submodules: recursive
        path: GDClip

    - name: Apply patches to GDClip/godot-cpp
      run: cd GDClip/godot-cpp && git apply ../../*.patch

    - name: Build the Docker image
      run: docker build . --file Dockerfile -t gdclip-docker

    - name: Get gcc version
      run: docker run --rm -t gdclip-docker bash -c "gcc --version"

    - name: Get o64-clang version
      run: docker run --rm -t gdclip-docker bash -c "o64-clang --version"

    - name: Get mingw-w64-gcc version
      run: docker run --rm -t gdclip-docker bash -c "x86_64-w64-mingw32-gcc --version"

    - name: Build for Linux
      run: >-
        docker run --rm -t
        -u $(id -u $USER):$(id -g $USER)
        -v "${{ github.workspace }}":"/github/workspace"
        gdclip-docker
        bash -c "cd /github/workspace/GDClip && make PLATFORM=linux NPROC=$(nproc)"

    - name: Build for macOS
      run: >-
        docker run --rm -t
        -u $(id -u $USER):$(id -g $USER)
        -v "${{ github.workspace }}":"/github/workspace"
        --env CXX=o64-clang++
        gdclip-docker
        bash -c "cd /github/workspace/GDClip && make PLATFORM=osx NPROC=$(nproc)"

    - name: Build for Windows
      run: >-
        docker run --rm -t
        -u $(id -u $USER):$(id -g $USER)
        -v "${{ github.workspace }}":"/github/workspace"
        --env CXX=x86_64-w64-mingw32-g++
        gdclip-docker
        bash -c "cd /github/workspace/GDClip && make PLATFORM=windows NPROC=$(nproc)"

    - name: Upload built library artifacts
      uses: actions/upload-artifact@v3
      with:
        path: ${{ github.workspace }}/GDClip/bin/*
        retention-days: 10
